// 【寻找最大子数组】 给定一个整数数组，找到一个具有最大和的子数组，返回其子数组最大和和这个子数组。
// 比如数组[−2, 2, −3, 4, −1, 2, 1, −5,]。符合要求的子数组为[4, −1, 2, 1]，其最大和为 6。
// 再比如数组[1, 2, 3, 4]，符合要求的子数组为[1, 2, 3, 4]，其最大和为 10。
// 再比如数组[-5, 6, -2, -3, 4]，符合要求的子数组为[6, -2, -3, 4]，其最大和为5。

var arr = [-2, 2, -3, 4, -1, 2, 1, -5];

// 最大值
var max = -2;
// 出现最大的时候的i值
var max_i = 0;
// 出现最大的时候的j值
var max_j = 0;

// i是开始
for (var i = 0; i <= arr.length - 1; i++) {
    // j是结束
    for (var j = i; j <= arr.length - 1; j++) {
        var sum = 0;
        // 把开始到结束累加上
        for (var k = i; k <= j; k++) {
            sum += arr[k];
        }
        // 如果这个数组的总和大于max，那么它自己就是max
        if (sum > max) {
            max = sum;
            // 输出它，slice表示子数组
            max_i = i;
            max_j = j;
        }
    }
}

console.log(arr.slice(max_i, max_j + 1));
